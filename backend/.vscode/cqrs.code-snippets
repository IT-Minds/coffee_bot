{
  "CQRS-Query": {
    "scope": "csharp",
    "prefix": "cqrs-query",
    "body": [
      "using System.Linq;",
      "using System.Threading;",
      "using System.Threading.Tasks;",
      "using Application.Common;",
      "using Application.Common.Interfaces;",
      "using AutoMapper;",
      "using MediatR;",
      "using Microsoft.EntityFrameworkCore;",
      "",
      "namespace Application.${3:MyNamespace}",
      "{",
      "  public class ${1:ClassName}Query : IRequest<${2:int}>",
      "  {",
      "    public class ${1:ClassName}QueryHandler : QueryBase, IRequestHandler<${1:ClassName}Query, ${2:int}>",
      "    {",
      "      public ${1:ClassName}QueryHandler(IApplicationDbContext dbContext, IMapper mapper)",
      "        : base(dbContext, mapper) {}",
      "",
      "      public async Task<${2:int}> Handle(${1:ClassName}Query request, CancellationToken cancellationToken)",
      "      {",
      "        return 0;$0",
      "      }",
      "    }",
      "  }",
      "}"
    ]
  },
  "CQRS-Command": {
    "scope": "csharp",
    "prefix": "cqrs-command",
    "body": [
      "using System.Threading;",
      "using System.Threading.Tasks;",
      "using MediatR;",
      "public class ${1:ClassName}Command : IRequest<${2:int}>",
      "{",
      "  public class ${1:ClassName}CommandHandler : IRequestHandler<${1:ClassName}Command, ${2:int}>",
      "  {",
      "    public async Task<${2:int}> Handle(${1:ClassName}Command request, CancellationToken cancellationToken)",
      "    {",
      "      $0return null;",
      "    }",
      "  }",
      "}"
    ]
  },
  "CQRS-Command-Validator": {
    "scope": "csharp",
    "prefix": "cqrs-command-validator",
    "body": [
      "public class ${1:ClassName}CommandValidator : AbstractValidator<${1:ClassName}Command>",
      "{",
      "  public ${1:ClassName}CommandValidator()",
      "  {",
      "     $0//RuleFor(x => x.Name).NotEmpty();",
      "  }",
      "}"
    ]
  }
}
